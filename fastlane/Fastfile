lane :test do
gradle(task: "test")
end

lane :debug_build do
  gradle(
    task: 'assembleDebug',
    build_type: 'Debug'
  )
end

lane :upload_to_internal_test do
  keystore_path = File.expand_path("../my-release-key.jks", __dir__)
  gradle(
    task: 'bundle',
    build_type: 'Release',
    properties: {
      "android.injected.signing.store.file" => keystore_path,
      "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
      "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
      "android.injected.signing.key.password" => ENV["KEY_PASSWORD"]
    }
  )
  upload_to_play_store(
      track: "internal",
      release_status: 'draft',
      skip_upload_apk: true,
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
  )
end

lane :upload_to_beta do
  keystore_path = File.expand_path("../my-release-key.jks", __dir__)
  gradle(
    task: 'bundle',
    build_type: 'Release',
    properties: {
      "android.injected.signing.store.file" => keystore_path,
      "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
      "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
      "android.injected.signing.key.password" => ENV["KEY_PASSWORD"]
    }
  )
  upload_to_play_store(
    skip_upload_apk: true,
    track: 'beta'
  )
end

lane :upload_to_production do
  keystore_path = File.expand_path("../my-release-key.jks", __dir__)
  gradle(
    task: 'bundle',
    build_type: 'Release',
    properties: {
      "android.injected.signing.store.file" => keystore_path,
      "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
      "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
      "android.injected.signing.key.password" => ENV["KEY_PASSWORD"]
    }
  )
  upload_to_play_store
end